/*
 * Copyright {{currentYear}} Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

import {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';
{{#if (includes scopes "@react-types")}}
import {DOMRef} from '@react-types/shared';
{{else}}
import {DOMProps, DOMRef, StyleProps} from '@react-types/shared';
{{/if}}
import {filterDOMProps} from '@react-aria-nutrient/utils';
import React from 'react';
{{#if (includes scopes "@react-types")}}
import {Spectrum{{componentName}}Props} from '@react-types/{{packageName}}';
{{/if}}
{{#if componentCSS}}
import styles from '@adobe/spectrum-css-temp/components/{{componentCSS}}/vars.css';
{{/if}}
{{#if (includes scopes "@react-aria")}}
import {use{{componentName~}}} from '@react-aria-nutrient/{{packageName}}';
{{/if}}
{{#if (includes scopes "@react-stately")}}
import {use{{componentName}}State} from '@react-stately/{{packageName}}';
{{/if}}
import {useProviderProps} from '@react-spectrum/provider';

{{#unless (includes scopes "@react-types")}}
export interface Spectrum{{componentName}}Props extends DOMProps, StyleProps {
  onChange?: any
}
{{/unless}}

/**
 * TODO: Add description of component here.
 */
export const {{componentName}} = React.forwardRef(function {{componentName}}(props: Spectrum{{componentName}}Props, ref: DOMRef<HTMLDivElement>) {
  // Grabs specific props from the closest Provider (see https://react-spectrum.adobe.com/react-spectrum/Provider.html#property-groups). Remove if your component doesn't support any of the listed props.
  props = useProviderProps(props);
  // Handles RSP specific style options, UNSAFE_style, and UNSAFE_className props (see https://react-spectrum.adobe.com/react-spectrum/styling.html#style-props)
  let {styleProps} = useStyleProps(props);
  {{#if (includes scopes "@react-stately")}}
  let state = use{{componentName}}State(props);
  {{/if}}
  {{#if (includes scopes "@react-aria")}}
  let ariaProps = use{{componentName}}(props, state);
  {{/if}}
  let domRef = useDOMRef(ref);

  return (
    <div
      {...filterDOMProps(props)}
      {{#if (includes scopes "@react-aria")}}
      {...ariaProps}
      {{/if}}
      {...styleProps}
      ref={domRef}
      {{#if componentCSS}}
      className={classNames(styles, '', styleProps.className)} />
      {{else}}
      className={styleProps.className} />
      {{/if}}
  );
});
