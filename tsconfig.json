{
  "compilerOptions": {
    // we can explicitly declare `any`, but we don't want to infer `any`
    "noImplicitAny": false,
    // maybe bump to 'esNext'?
    "target": "es2018",
    // allows react jsx in tsx files
    // this is set to preserve so that different packages can use different JSX runtimes
    // depending on the React version they support. ESLint will ensure that React is imported
    // in packages using the old JSX runtime. Parcel will compile JSX according to the React
    // version specified in the package.json of each package.
    "jsx": "preserve",
    // Eventually turn off, one we have no more assumed default exports.
    // Allow default imports from modules with no default export.
    "allowSyntheticDefaultImports": true,
    // allows importing of json files, needed for locales as of right now
    "resolveJsonModule": true,
    // Search under node_modules for non-relative imports.
    "moduleResolution": "node",
    "module": "esnext",
    // Process & infer types from .js files.
    "allowJs": true,
    // Don't emit; allow Babel to transform files.
    "noEmit": true,
    // Disallow features that require cross-file information for emit.
    "isolatedModules": true,
    // Import non-ES modules as default imports.
    "esModuleInterop": true,
    // if 'target' is updated, this should be updated as well
    "lib": [
      "esnext",
      "dom",
      "dom.iterable"
    ],
    "skipLibCheck": false,
    "strict": true,
    "plugins": [
      {
        "name": "@react-spectrum/ts-plugin"
      }
    ],
    "paths": {
      "tailwind-starter/*": ["./starters/tailwind/src/*"]
    }
  },
  "include": [
    "packages",
    "lib/svg.d.ts",
    "lib/viewTransitions.d.ts",
    "lib/css.d.ts"
  ],
  "exclude": [
    "**/node_modules",
    "packages/dev/optimize-locales-plugin",
    "packages/@react-spectrum/s2/s2wf-icons",
    "packages/@react-spectrum/s2/icon.d.ts"
  ]
}
