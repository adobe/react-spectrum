diff --git a/dist/esm/Tool.js b/dist/esm/Tool.js
index 12b99ffbcc3002b3a9081d02db230ea6eb9990d7..8e1c4dc9dd3caa6834dafd54291e97599a65c136 100644
--- a/dist/esm/Tool.js
+++ b/dist/esm/Tool.js
@@ -20,11 +20,11 @@ function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToAr
 function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
 import * as React from 'react';
 import { global } from '@storybook/global';
-import { themes } from '@storybook/theming';
-import { IconButton } from '@storybook/components';
+import { themes } from 'storybook/theming';
+import { IconButton } from 'storybook/internal/components';
 import { MoonIcon, SunIcon } from '@storybook/icons';
-import { STORY_CHANGED, SET_STORIES, DOCS_RENDERED } from '@storybook/core-events';
-import { useParameter } from '@storybook/manager-api';
+import { STORY_CHANGED, SET_STORIES, DOCS_RENDERED } from 'storybook/internal/core-events';
+import { useParameter } from 'storybook/manager-api';
 import equal from 'fast-deep-equal';
 import { DARK_MODE_EVENT_NAME, UPDATE_DARK_MODE_EVENT_NAME } from './constants';
 var _ref = global,
diff --git a/dist/esm/index.js b/dist/esm/index.js
index f9fba78c0a84fc5e07fea8c9096983806874a592..19b4cc6964561e38f77fd64aef8eac6573ccadf1 100644
--- a/dist/esm/index.js
+++ b/dist/esm/index.js
@@ -4,7 +4,7 @@ function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o =
 function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
 function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
 function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
-import { addons, useState, useEffect } from '@storybook/preview-api';
+import { addons, useState, useEffect } from 'storybook/preview-api';
 import { DARK_MODE_EVENT_NAME } from './constants';
 import { store } from './Tool';
 
diff --git a/dist/esm/preset/manager.js b/dist/esm/preset/manager.js
index 4b14ca543bb350a1adc9d08521bcf2980204aab0..d125d1c504e8fa60ccab95c6e22ca16e1cc4d011 100644
--- a/dist/esm/preset/manager.js
+++ b/dist/esm/preset/manager.js
@@ -4,9 +4,9 @@ function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { va
 function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
 function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
 function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
-import { addons } from '@storybook/manager-api';
-import { Addon_TypesEnum } from '@storybook/types';
-import { themes } from '@storybook/theming';
+import { addons } from 'storybook/manager-api';
+import { Addon_TypesEnum } from 'storybook/internal/types';
+import { themes } from 'storybook/theming';
 import * as React from 'react';
 import Tool, { prefersDark, store } from '../Tool';
 var currentStore = store();
